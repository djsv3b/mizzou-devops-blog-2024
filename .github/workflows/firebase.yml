name: Firebase CI

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]  # Use Node 18 for consistency

    steps:
    - uses: actions/checkout@v2
    - name: Set up Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v2
      with:
        node-version: ${{ matrix.node-version }}
    - name: Cache Node Modules
      uses: actions/cache@v2
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ matrix.node-version }}-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-${{ matrix.node-version }}-
    - name: Install dependencies
      run: npm install  # Use npm instead of yarn
    - name: Build and Test
      run: |
        npm run build  # Builds your React app
        npm test -- --watchAll=false  # Run tests without watch mode
    - name: Archive Build
      uses: actions/upload-artifact@v2
      with:
        name: build
        path: build
        
  deploy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Download Build
        uses: actions/download-artifact@v2
        with:
          name: build
          path: build
      - name: Install Firebase CLI
        run: npm install -g firebase-tools  # Ensure Firebase CLI is installed
      - name: Deploy to Firebase
        run: |
          firebase --version  # Check if Firebase CLI is installed properly
          firebase deploy --only hosting  # Deploy only to Firebase Hosting
        env:
          FIREBASE_TOKEN: ${{ secrets.FIREBASE_TOKEN }}  # Ensure token is set as a secret
